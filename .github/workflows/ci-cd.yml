name: Java CI/CD Pipeline

on:
  push:
    branches: [ "main", "staging", "development" ]
  pull_request:
    branches: [ "main", "staging", "development" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      debug_enabled:
        description: 'Run the workflow with debug logging'
        required: false
        type: boolean
        default: false

env:
  JAVA_VERSION: '17'
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: root
  POSTGRES_DB: eC-vendor-db

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: eC-vendor-db
        ports:
          - 5437:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Display Debug Information
        if: ${{ inputs.debug_enabled }}
        run: |
          echo "Java Version:"
          java -version
          echo "Maven Version:"
          ./mvnw --version
          echo "PostgreSQL Connection Info:"
          echo "URL: jdbc:postgresql://localhost:5437/${{ env.POSTGRES_DB }}"
          echo "Current Directory:"
          pwd
          echo "Directory Contents:"
          ls -la

      - name: Build Project
        run: |
          chmod +x mvnw
          ./mvnw -B package -DskipTests
        env:
          SPRING_PROFILES_ACTIVE: ${{ github.event.inputs.environment || 'staging' }}

      - name: Run Tests
        run: |
          ./mvnw test
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5437/${{ env.POSTGRES_DB }}
          SPRING_DATASOURCE_USERNAME: ${{ env.POSTGRES_USER }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.POSTGRES_PASSWORD }}

      - name: List Files in Target Directory
        run: ls -la target

      - name: Display Target Directory Contents
        run: |
          echo "Contents of target directory:"
          ls -la target

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  deploy:
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging')
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target

      - name: Deploy to Environment
        run: |
          echo "Deploying to ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }} environment"
        env:
          SPRING_PROFILES_ACTIVE: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
